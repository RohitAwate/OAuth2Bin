package cache

import (
	"testing"
)

// TestROPCFlow tests the entirety of the functions set of ropcStore
// as they would be used by the Resource Owner Password Credentials flow
func TestROPCFlow(t *testing.T) {
	// Generating a token based on the grant which would
	// be generated by invoking the token endpoint
	token, err := NewROPCToken("")
	if err != nil {
		t.Fatalf("Could not generate token:\n%s\n", err)
	}

	t.Logf("Token generated: %s\n", token.AccessToken)

	// Check if token exists
	res := VerifyROPCToken(token.AccessToken)
	if !res {
		t.Fatalf("ROPC token verification failed\n")
	}

	// Issue new token based on the previously issued refresh token
	token, err = NewROPCRefreshToken(token.RefreshToken)
	if err != nil {
		t.Fatalf("Could not generate token from refresh token\n")
	}

	// Remove the token
	invalidateROPCToken(token.AccessToken)
	t.Logf("Token invalidated\n")
}

func TestROPCRefreshTokenExists(t *testing.T) {
	res := ROPCRefreshTokenExists("", true)
	if res {
		t.Fatalf("Empty refresh token should not exist")
	}
}
